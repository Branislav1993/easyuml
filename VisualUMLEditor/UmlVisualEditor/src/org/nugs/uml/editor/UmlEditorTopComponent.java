/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package org.nugs.uml.editor;

import java.awt.BorderLayout;
import javax.swing.JComponent;
import org.openide.util.NbBundle;
import org.openide.windows.TopComponent;
import org.netbeans.api.settings.ConvertAsProperties;
import org.netbeans.shapesample.palette.PaletteSupport;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.lookup.Lookups;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(dtd = "-//org.nugs.uml.editor//UmlEditor//EN",
autostore = false)
@TopComponent.Description(preferredID = "UmlEditorTopComponent",
//iconBase="SET/PATH/TO/ICON/HERE", 
persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "editor", openAtStartup = true)
@ActionID(category = "Window", id = "org.nugs.uml.editor.UmlEditorTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(displayName = "#CTL_UmlEditorAction",
preferredID = "UmlEditorTopComponent")
public final class UmlEditorTopComponent extends TopComponent {

    private JComponent myView;

    public UmlEditorTopComponent() {
        initComponents();
        setName(NbBundle.getMessage(UmlEditorTopComponent.class, "CTL_UmlEditorTopComponent"));
        setToolTipText(NbBundle.getMessage(UmlEditorTopComponent.class, "HINT_UmlEditorTopComponent"));

        GraphSceneImpl scene = new GraphSceneImpl();
        myView = scene.createView();

        scenePane.setViewportView(myView);
        add(scene.createSatelliteView(), BorderLayout.WEST);
        
        associateLookup( Lookups.fixed( new Object[] { PaletteSupport.createPalette() } ) );
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scenePane = new javax.swing.JScrollPane();

        setLayout(new java.awt.BorderLayout());
        add(scenePane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scenePane;
    // End of variables declaration//GEN-END:variables

    @Override
    public void componentOpened() {
        // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }
}
